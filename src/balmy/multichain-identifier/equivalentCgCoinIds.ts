import { CgCoinId } from ".";

export const equivalentCgCoinIds: Record<CgCoinId, Set<CgCoinId> | RegExp> = {
  tether: new Set([
    "bridged-usdt",
    "arbitrum-bridged-usdt-arbitrum",
    "bridged-tether-linea",
    "bridged-tether-manta-pacific",
    "bridged-tether-opbnb",
    "bridged-tether-scroll",
    "bridged-tether-stargate",
    "bridged-tether-starkgate",
    "bridged-usdt-core",
    "celer-bridged-usdt-conflux",
    "cronos-bridged-usdt-cronos",
    "gnosis-xdai-bridged-usdt-gnosis",
    "huobi-bridged-usdt-heco-chain",
    "kucoin-bridged-usdt-kucoin-community-chain",
    "l2-standard-bridged-usdt-base",
    "lxly-bridged-usdt-astar-zkevm",
    "mantle-bridged-usdt-mantle",
    "mapped-usdt",
    "mode-bridged-usdt-mode",
    "multichain-bridged-usdt-moonbeam",
    "multichain-bridged-usdt-moonriver",
    "multichain-bridged-usdt-syscoin",
    "multichain-bridged-usdt-telos",
    "neonpass-bridged-usdt-neon",
    "nova-tether-usd",
    "polygon-bridged-usdt-polygon",
    "polygon-hermez-bridged-usdt-polygon-zkevm",
    "polygon-hermez-bridged-usdt-x-layer",
    "shimmerbridge-bridged-usdt-shimmerevm",
    "symbiosis-bridged-usdt-bahamut",
    "tether-pulsechain",
    "thundercore-bridged-usdt-thundercore",
    "viction-bridged-usdt-viction",
  ]),
  "usd-coin": new Set([
    "beam-bridged-usdc-beam",
    "binance-bridged-usdc-bnb-smart-chain",
    "bridged-usdc",
    "bridged-usdc-chainport",
    "bridged-usdc-core",
    "bridged-usdc-immutable-zkevm",
    "bridged-usd-coin-linea",
    "bridged-usd-coin-manta-pacific",
    "bridged-usd-coin-scroll",
    "bridged-usd-coin-starkgate",
    "celer-bridged-usdc-astar",
    "celer-bridged-usdc-conflux",
    "celer-bridged-usdc-oasys",
    "cronos-bridged-usdc-cronos",
    "energi-bridged-usdc-energi",
    "force-bridge-usdc",
    "gnosis-xdai-bridged-usdc-gnosis",
    "harmony-horizen-bridged-usdc-harmony",
    "kucoin-bridged-usdc-kucoin-community-chain",
    "lxly-bridged-usdc-astar-zkevm",
    "mantle-bridged-usdc-mantle",
    "mode-bridged-usdc-mode",
    "multichain-bridged-usdc-fantom",
    "multichain-bridged-usdc-kava",
    "multichain-bridged-usdc-moonbeam",
    "neonpass-bridged-usdc-neon",
    "official-arbitrum-bridged-usdc-arbitrum-nova",
    "polygon-hermez-bridged-usdc-polygon-zkevm",
    "polygon-hermez-bridged-usdc-x-layer",
    "rainbow-bridged-usdc-aurora",
    "usd-coin-pulsechain",
  ]),
  dai: generateRegex("dai"),
  weth: generateRegex("weth"),
  wavax: generateRegex("wavax"),
  wsteth: generateRegex("wsteth"),
  wbtc: generateRegex("wbtc"),
  wbnb: generateRegex("wbnb"),
};

export function generateRegex(cgCoinId: CgCoinId) {
  return new RegExp(`^${cgCoinId}$|.*bridged-${cgCoinId}.*`);
}
